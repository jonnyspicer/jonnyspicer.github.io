<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title></title>
    <description>Jonny Spicer's personal website and blog, where he writes about mental health, technology, esports, but primarily trash.</description>
    <link>http://localhost:4000</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml" />
    
      <item>
        <title>30 Days of Leetcode&amp;#58; Days 1 to 5</title>
        <description>&lt;p&gt;There’s quite a few 30-days-of-code challenges popping up this week, given that April looks set
to be the first full month in which the entire world is forbidden from leaving our houses. As
I already have a Leetcode account and have done a very small number of the easy problems on
there, I thought I’d take a stab at &lt;a href=&quot;https://leetcode.com/discuss/general-discussion/551411/30-Day-LeetCoding-Challenge&quot; target=&quot;_blank&quot;&gt;theirs&lt;/a&gt;, and will share some or all of my solutions here.&lt;/p&gt;

&lt;h3 id=&quot;april-1st---single-number&quot;&gt;April 1st - &lt;a href=&quot;https://leetcode.com/problems/single-number/&quot; target=&quot;_blank&quot;&gt;Single Number&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;Today’s problem is very simple; given a non-empty array of integers, every element appears twice except for one. Find that single one.
For example;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-none&quot;&gt;    Input: [4,1,2,1,2]
    Output: 4
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I’d actually already completed this problem on Leetcode a few months ago, however I’d used a Linq query which aren’t exactly the most performant things in the world:&lt;/p&gt;

&lt;div class=&quot;language-csharp highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Solution&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;SingleNumber&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nums&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// I think this is pretty self explanatory!&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nums&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;GroupBy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                   &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Where&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                   &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Select&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;First&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
                   &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;First&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I decided to retry without using Linq (at least until the end), and this solution works (and works faster than its predecessor), however I think it nicely illustrates one of the points I
made in &lt;a href=&quot;/mendokusai/2020/04/04/think-deeply-about-simple-things&quot; target=&quot;_blank&quot;&gt;yesterday’s blog,&lt;/a&gt; because I have made a pretty embarrassing oversight here - &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;exists&lt;/code&gt; should simply
be a List, and then rather than incrementing an index’s count if it already exists, I should remove it from the list instead, which would leave only one number left. Ultimately, this is why
doing these kinds of problems are useful - it’s quick and easy to compare your code to others’ afterwards, and making silly mistakes like this one in a sandbox environment are much loss
costly than making them in a professional context.&lt;/p&gt;

&lt;div class=&quot;language-csharp highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Solution&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;SingleNumber&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nums&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// create a Dictionary for every number in the array&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// and how many times it appears&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;Dictionary&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;exists&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Dictionary&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;();&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;foreach&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nums&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;exists&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;ContainsKey&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)){&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;exists&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;exists&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;exists&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;FirstOrDefault&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Value&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;There is actually a much simpler solution to this using bitwise XOR, but I think it’s a lot less intuitive, and from the discussions I’ve seen around this question it seems like
you essentially have to know that you should use XOR here rather than be able to figure it out. This works based off the idea that XOR of a number with itself is 0, and XOR of a number
with 0 is the original number - so as we go through the list, each number will cancel itself out, until only the unpaired one remains in the result value.&lt;/p&gt;

&lt;div class=&quot;language-csharp highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Solution&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;SingleNumber&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nums&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;foreach&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nums&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;^=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;april-2nd---happy-number&quot;&gt;April 2nd - &lt;a href=&quot;https://leetcode.com/problems/happy-number&quot; target=&quot;_blank&quot;&gt;Happy Number&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;The problem statement here is simply to write an algorithm that returns true if a number is “happy”, and false otherwise. As per the problem itself: “a happy number is a number defined by the
following process: starting with any positive integer, replace the number by the sum of the squares of its digits, and repeat the process until the number equals 1 (where it will stay), or it
loops endlessly in a cycle which does not include 1. Those numbers for which process ends in 1 are happy numbers.”&lt;/p&gt;

&lt;p&gt;And the example given:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-none&quot;&gt;Input: 19
Output: true
Explanation:
1^2 + 9^2 = 82
8^2 + 2^2 = 68
6^2 + 8^2 = 100
1^2 + 0^2 + 0^2 = 1
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;For this one I managed to think a little deeper before beginning to type, and realised that once any number has been repeated in a cycle, the cycle will loop endlessly, therefore the number
cannot be happy (and conversely, were the cycle to never repeat, obviously eventually it would hit 1).&lt;/p&gt;

&lt;div class=&quot;language-csharp highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Solution&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;IsHappy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;seen&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;();&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;// j is the value into which we are calculating the&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;// sum of the squares of digits&lt;/span&gt;
            &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
                &lt;span class=&quot;c1&quot;&gt;// using modulus, we can process each digit on&lt;/span&gt;
                &lt;span class=&quot;c1&quot;&gt;// its own rather than doing something ham-fisted&lt;/span&gt;
                &lt;span class=&quot;c1&quot;&gt;// like splitting the int into a char[]&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;-=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;/=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;seen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Contains&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)){&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;seen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;april-3rd---maximum-subarray&quot;&gt;April 3rd - &lt;a href=&quot;https://leetcode.com/problems/maximum-subarray&quot; target=&quot;_blank&quot;&gt;Maximum Subarray&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;For today’s entry we must take an array of integers and find the contiguous subarray with the largest sum, which we must then return. This is also one that I feel like I did a
little clumsily (and indeed one it took me significantly longer than the first two problems to solve), but the consensus is that the optimal solution (which implements &lt;a href=&quot;https://algorithms.tutorialhorizon.com/kadanes-algorithm-maximum-subarray-problem/&quot; target=&quot;_blank&quot;&gt;Kadane’s Algorithm,&lt;/a&gt;) is again fairly hard to intuit.&lt;/p&gt;

&lt;p&gt;Example:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-none&quot;&gt;Input: [-2,1,-3,4,-1,2,1,-5,4],
Output: 6
Explanation: [4,-1,2,1] has the largest sum = 6.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Using nested for loops always makes me feel a little queasy, and I knew while doing it that this brute force method of checking every possible subarray was not going to be the most efficient
way to solve the problem - but it does solve the problem.&lt;/p&gt;

&lt;div class=&quot;language-csharp highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Solution&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;MaxSubArray&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nums&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;currentMax&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nums&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
       &lt;span class=&quot;c1&quot;&gt;// for every int in nums...&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nums&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;++&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
            &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;//...check every subarray by moving&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;// forward in the nums array...&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;k&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;k&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nums&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Length&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;++){&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nums&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
                &lt;span class=&quot;c1&quot;&gt;// ...and see what's biggest&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;currentMax&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;currentMax&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;currentMax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;An implementation of Kadane’s Algorithm, both easier to grok for humans as well as more efficient for machines:&lt;/p&gt;

&lt;div class=&quot;language-csharp highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Solution&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;MaxSubArray&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nums&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;current&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;currentMax&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nums&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nums&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;++){&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;// add this value in the array to the current sum&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;current&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nums&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;// if this value in the array is bigger than&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;// the current sum...&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nums&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;current&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
                &lt;span class=&quot;c1&quot;&gt;//...then this value becomes the current sum&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;current&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nums&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;current&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;currentMax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;currentMax&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;current&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;currentMax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;april-4th---move-zeroes&quot;&gt;April 4th - &lt;a href=&quot;https://leetcode.com/problems/move-zeroes/&quot; target=&quot;_blank&quot;&gt;Move Zeroes&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;Another short and sweet problem statement: “given an array &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;nums&lt;/code&gt;, write a function to move all &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;0&lt;/code&gt;’s to the end of it while maintaing the relative orrder of the non-zero elements.&lt;/p&gt;

&lt;p&gt;Example:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-none&quot;&gt;Input: [0,1,0,3,12]
Output: [1,3,12,0,0]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This one seems simple, but I ended up wrestling with it for hours - again, largely because I did not fully think through the problem before I began writing code to try and solve it, and then
became stuck viewing the problem only through the lens of the code I’d already written. For example, I spent a long time checking to see whether or not a value &lt;em&gt;was&lt;/em&gt; 0 in the array rather
than was &lt;em&gt;not&lt;/em&gt;, and similarly it took me an embarassingly long time to realise that I had &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;j &amp;gt; zeroCount&lt;/code&gt; instead of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;j &amp;gt;= zeroCount&lt;/code&gt; in the second for loop. Still, I got there in the
end.&lt;/p&gt;

&lt;div class=&quot;language-csharp highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Solution&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;MoveZeroes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nums&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;zeroCount&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nums&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;++){&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;//if a value isn't 0...&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nums&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
                &lt;span class=&quot;c1&quot;&gt;//move it to the next available index&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;nums&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;zeroCount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;++]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nums&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// fill the rest of the array with 0s&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nums&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Length&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;zeroCount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;--){&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;nums&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;april-5th---best-time-to-buy-and-sell-stock-ii&quot;&gt;April 5th - &lt;a href=&quot;https://leetcode.com/problems/best-time-to-buy-and-sell-stock-ii/&quot; target=&quot;_blank&quot;&gt;Best Time To Buy And Sell Stock II&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;Today’s problem: design an algorithm to find the maximum profit from buying and selling stocks from an array in which each element corresponds to the stock price for that day. Any number
of transactions can be made, however only one transaction can be made at a time (eg once you have bought once, you must sell once before you can buy again).&lt;/p&gt;

&lt;p&gt;Example:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-none&quot;&gt;Input: [7,1,5,3,6,4]
Output: 7
Explanation: Buy on day 2 (price = 1)
             and sell on day 3 (price = 5),
             profit = 5-1 = 4.

             Then buy on day 4 (price = 3)
             and sell on day 5 (price = 6),
             profit = 6-3 = 3.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This is the first problem I solved after yesterday’s blog, and consequently the first one which I was determined to consider for a meaningful amount of time before writing any code. It may
be a fluke, or possibly this was an easier problem than the previous two days’, however it seemed to pay off as I solved this one basically instantly. The important thing to realise here is
that we have the gift of omniscience, and at every point in time we can know what is happening at every other point in time - including seeing into the future by reading the rest of the array!&lt;/p&gt;

&lt;div class=&quot;language-csharp highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Solution&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;MaxProfit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;prices&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bought&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;profit&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;buyPrice&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;prices&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;++){&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bought&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
                &lt;span class=&quot;c1&quot;&gt;// we want to buy the dip; if we know the price&lt;/span&gt;
                &lt;span class=&quot;c1&quot;&gt;// is going to go up tomorrow, we should buy now!&lt;/span&gt;
                &lt;span class=&quot;c1&quot;&gt;// (unless there ominously is no tomorrow)&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;prices&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Length&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;prices&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;prices&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;bought&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;buyPrice&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;prices&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;c1&quot;&gt;// similarly, if the price is about to go down,&lt;/span&gt;
                &lt;span class=&quot;c1&quot;&gt;// it's time to dump our whole portfolio&lt;/span&gt;
                &lt;span class=&quot;c1&quot;&gt;// (which we should also do if the world&lt;/span&gt;
                &lt;span class=&quot;c1&quot;&gt;// is about to end)&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;prices&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Length&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;||&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;prices&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Length&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;prices&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;prices&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]))&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;bought&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;profit&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;prices&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;buyPrice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;profit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If you made it this far, thank you for reading! I will be endeavouring to do all 30 days of the challenge and plan to keep writing up my solutions in this blog every few days or so.&lt;/p&gt;
</description>
        <pubDate>Sun, 05 Apr 2020 00:00:00 +0100</pubDate>
        <link>http://localhost:4000//mendokusai/2020/04/05/30-days-of-leetcode-days-1-to-5</link>
        <guid isPermaLink="true">http://localhost:4000//mendokusai/2020/04/05/30-days-of-leetcode-days-1-to-5</guid>
      </item>
    
      <item>
        <title>Think Deeply About Simple Things</title>
        <description>&lt;p&gt;I heard the notion to “think deeply about simple things” recently in relation to maths, but it applies
just as much to software, as well as life. In the two technical fields, our knowledge is built on a
foundation of layers of paradigms, and often we are unquestioning of these - we assimilate them into
our cognitive processes before we have the tools necessary to ask the right questions, and later in our
development, we are simply not in the habit of challenging our own assumptions.&lt;/p&gt;

&lt;p&gt;Building this habit is well worth doing, especially in software, where it seems that the paradigms are
at best messy, and at worst detrimental to our ability to write high-quality software. Object-oriented vs
procedural programming is still a debate which many people have strong opinions about, and nobody has
an especially clear answer to. Languages all have their pros and cons, and due to their proliferation
in the wild, collective knowledge is spread thin between them.&lt;/p&gt;

&lt;p&gt;All this means that when it comes to solving problems, we have so much noise to cut through before
we even get down to conjuring a solution, which ultimately means less deep thought is put into said
solution. Having started Leetcode 30 days of code challenge this month, it’s painful clear to me that
I need to think deeply about a problem (which is often a simple problem) before I start actually writing
any code, otherwise it’ll end up being slow, inefficient and painful. Completing the challenge solely
in C# is rapidly becoming a choice I regret, as I realise quite how slow it is and how much memory it
uses - this is even outside of a large .NET project running on Windows which inevitably introduces
inordinate amounts of bloat to the equation. Simply stopping and asking yourself “why?” several times
before beginning to tackle a problem, and trying to evaluate what assumptions you are making in the
process is going to be a valuable exercise in improving as a programmer.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;The same is true for life - I find myself often very caught up in the minutiae of my existence, and
think that my happiness is dependent on some precarious spider’s web of interconnecting threads, but
that is obviously not the case. I think that, because I have not really yet begun to think about the
problem. Naturally, I think society is out to get us on this one - it does not exactly reward deep
contemplation on the basics of life, and rams down our throat the idea that every detail is of critical
importance to our content - but that doesn’t mean we can’t beat it. I think human beings are
fundamentally simple creatures with simple wants - houseplants with complicated emotions, as the
kids would say - and I suspect if I spend more time thinking deeply about these simple desires, I might
find myself meaningfully happier.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;three-more-things-to-be-grateful-for&quot;&gt;Three more things to be grateful for&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/channel/UCBr_Fu6q9iHYQCh13jmpbrg&quot; target=&quot;_blank&quot;&gt;Errichto’s Youtube channel&lt;/a&gt;
for so clearly explaining algorithms and Leetcode problem solutions;&lt;/li&gt;
  &lt;li&gt;Being able to work from home so easily and seamlessly;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://mynoise.net&quot; target=&quot;_blank&quot;&gt;myNoise&lt;/a&gt; for having a huge catalogue of soothing sounds to
both keep my company and distract me from the madness of the outside world.&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sat, 04 Apr 2020 00:00:00 +0100</pubDate>
        <link>http://localhost:4000//mendokusai/2020/04/04/think-deeply-about-simple-things</link>
        <guid isPermaLink="true">http://localhost:4000//mendokusai/2020/04/04/think-deeply-about-simple-things</guid>
      </item>
    
      <item>
        <title>Three More Things To Be Grateful For</title>
        <description>&lt;p&gt;After a rough couple of days, some more things that I’m grateful for seem like they’d be useful to segue into a more positive weekend;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;I’m grateful for Ted for putting in the work to get tags working in our Jekyll blogs, and submitting his pull requests to me;&lt;/li&gt;
  &lt;li&gt;I’m grateful for the sea, for always putting things in perspective;&lt;/li&gt;
  &lt;li&gt;I’m grateful for the lady at the checkout in the Co-op today who pointed out that the ice cream which I’d only bought one of us was in fact on offer, and I could get twice as much for the same price.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The first two are alright, but to be honest the third one &lt;em&gt;really&lt;/em&gt; made my day. Also be sure to check out tags now they are finally working!&lt;/p&gt;
</description>
        <pubDate>Fri, 03 Apr 2020 00:00:00 +0100</pubDate>
        <link>http://localhost:4000//mendokusai/2020/04/03/three-more-things-to-be-grateful-for</link>
        <guid isPermaLink="true">http://localhost:4000//mendokusai/2020/04/03/three-more-things-to-be-grateful-for</guid>
      </item>
    
      <item>
        <title>New Students</title>
        <description>&lt;p&gt;The whole world is looking for new indoor activities with which to amuse themselves, and it seems a lot of people are
turning to chess - just take a quick look at chess.com’s &lt;a href=&quot;https://www.chess.com/blog/erik/chess-com-during-this-global-stay-home-moment&quot; target=&quot;_blank&quot;&gt;server load&lt;/a&gt;
if you don’t believe me. It seems some of these new students are looking for masters and a couple of my friends have
even reached out to me for lessons (not that I am a master, especially not so in the strict chess sense).&lt;/p&gt;

&lt;p&gt;Given that I’m used to playing almost exclusively with players &amp;gt; 2x my age, it’ll be quite nice to be able to talk
about the game with people who are in the same place in life as me, and it’ll be doubly good to have my ego stroked
as I do my best to impart unto them what little chess wisdom I’ve gleaned over the years.&lt;/p&gt;
</description>
        <pubDate>Thu, 02 Apr 2020 00:00:00 +0100</pubDate>
        <link>http://localhost:4000//mendokusai/2020/04/02/new-students</link>
        <guid isPermaLink="true">http://localhost:4000//mendokusai/2020/04/02/new-students</guid>
      </item>
    
      <item>
        <title>Three Things to be Grateful For</title>
        <description>&lt;p&gt;Inspired (as always) by Polly, today I wanted to follow her lead and share three things which I am
grateful for, in a time when gratitude seems necessary to remain afloat.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Being able to talk to her despite the distance between us, to laugh and joke, to try to find silver
linings and to make plans to look forward to, once this is all over;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Being able to run in the sunshine, to enjoy nature and forget about my worries and the worries of
the world fora while;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The &lt;a href=&quot;https://podcasts.apple.com/us/podcast/slow-burn/id1315040130&quot; target=&quot;_blank&quot;&gt;Slow Burn podcast&lt;/a&gt;
for educating and entertaining me all day, keeping me company while I’m working on my own and contextualising
some of the greatest political scandals in modern history.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Wed, 01 Apr 2020 00:00:00 +0100</pubDate>
        <link>http://localhost:4000//mendokusai/2020/04/01/three-things-to-be-grateful-for</link>
        <guid isPermaLink="true">http://localhost:4000//mendokusai/2020/04/01/three-things-to-be-grateful-for</guid>
      </item>
    
      <item>
        <title>Sea Mine Spotted</title>
        <description>&lt;p&gt;While out running today I set myself the challenge of getting lost, which I duly succeeded in. As I was meandering
through some lanes in a fairly nice part of the island, the lawns were manicured, there were Mercedes’ parked in driveways,
and freshly painted detached houses glistened in the sun. Oh, and one of them had a fucking sea mine as a garden ornament,
right by the road, painted bright red. What is wrong with people?&lt;/p&gt;

&lt;p&gt;At the expense of probably being preachy (some things never change), I’ve found running to be a pretty cool way to see
where you live in a new light. I’ve got to explore and go places I’ve never been, despite having lived virtually my
whole life here, and these places are often within a kilometre or two of where I live - I’d just never bothered to
venture down many unknown roads.&lt;/p&gt;
</description>
        <pubDate>Tue, 31 Mar 2020 00:00:00 +0100</pubDate>
        <link>http://localhost:4000//mendokusai/2020/03/31/sea-mine-spotted</link>
        <guid isPermaLink="true">http://localhost:4000//mendokusai/2020/03/31/sea-mine-spotted</guid>
      </item>
    
      <item>
        <title>Know the Risk</title>
        <description>&lt;p&gt;One of the best pieces of advice that I have heard with regard to dealing with the current pandemic
is to know the risk - to educate yourself on what, specifically, is the risk to yourself, your family
and your friends. Doing so means you’ll panic less, and can form actionable steps to take towards
protecting yourself and those close to you. Knowledge will breed peace of mind, and cutting through
the noise is easier than I had first thought, once I actually applied myself to the task and asked
some friends for help.&lt;/p&gt;
</description>
        <pubDate>Mon, 30 Mar 2020 00:00:00 +0100</pubDate>
        <link>http://localhost:4000//mendokusai/2020/03/30/know-the-risk</link>
        <guid isPermaLink="true">http://localhost:4000//mendokusai/2020/03/30/know-the-risk</guid>
      </item>
    
      <item>
        <title>Pretending II</title>
        <description>&lt;p&gt;I have put off writing this post for several months now, probably since November. I’ve done so for a number of reasons, which we’ll get into in a little bit, but given that the current global pandemic has us all sitting inside, feeling alone and sorry for ourselves, I guess now seems like a good time to actually do it.&lt;/p&gt;

&lt;p&gt;This weekend I finished watching &lt;em&gt;The Witcher&lt;/em&gt; on Netflix, and to be perfectly candid, I really did not like it - I would even go so far as to say that it upset me greatly. I can’t offer a particularly good explanation as to why I decided to continue to consume all eight hour-long episodes, other than some sense of emotional masochism, or perhaps to fill me with righteous anger which I could then complain about in a blog… so here goes.&lt;/p&gt;

&lt;p&gt;The Witcher certainly bothered me for reasons other than simply shallow, predictable writing and an all-encompassing desperation to take itself incredibly seriously. The titular witcher, Geralt of Rivia, embodies the toxic male stereotype so strongly that one would be forgiven for assuming it was done with some sense of self-awareness, but alas, judging by the rest of the show, that seems to not be the case. Henry Cavill does his best Batman impression throughout, accompanied by his signature bulging muscles and chiseled jawline, as he vanquishes monsters by day before vanquishing beautiful women by night, all the while displaying Aurelian levels of stoicism. His character is puddle-deep, yet he is of course still the protagonist of a multi-million dollar Netflix original - have we not moved past this yet? Are there not different stories to tell, ones which would not be retreading the same ground for the thousandth time, in which the male characters actually have genuine human emotions that are complicated and messy and amount to more than having a big sword and a big dick?&lt;/p&gt;

&lt;p&gt;Geralt irks me so because in many ways, I am desperate to be like him. The seed of his masculine ideal was planted in me when I was a child, and is constantly being watered by the world around me. Collective progress has been made towards rejecting these notions of men, with a large number of male mental health charities occupying a larger part of public consciousness in recent years, the Royal grandsons becoming more outspoken about their issues, a growing number of people realising James Bond should actually be far from idolised, etc etc. There’s still a long way to go though; I think for society in general but surely for myself. It’s ingrained within me that men have to be financially, emotionally, physically independent, that they are the protectors of society with ample brawn and unwavering bravery. They should be charismatic and strong and, contrary to the well-known poem, insular.&lt;/p&gt;

&lt;p&gt;Perhaps I have taken all these things to heart more than I ought to, but regardless they now occupy a space deep within my psyche. I know consciously, rationally, that these standards are not beneficial to hold myself to, and that I do not want to be Geralt of Rivia, but still those core beliefs persist and he is very much the bar I set myself; anything less is… not good enough.&lt;/p&gt;

&lt;p&gt;Trying to supplant this idea of manliness is not especially easy either, as male role models who embody qualities other than these while still remaining undeniably manly are difficult to come by. The people close to me who inspire me and who in many ways I want to emulate are almost exclusively women (although perhaps that belies that I have some kind of bias against men, which is a blog for another day). There are fictional characters who do a lot better than Geralt at being men worthy of exemplifying, like &lt;a href=&quot;/mendokusai/2020/03/08/itachi-uchiha&quot;&gt;Itachi Uchiha&lt;/a&gt; or &lt;a href=&quot;/mendokusai/2020/03/03/disco-elysium&quot;&gt;Harrier du Bois&lt;/a&gt;, both of whom wear their (profound) flaws on their sleeves. There are men further away who I look up to, like &lt;a href=&quot;/mendokusai/2018/02/16/twin-fantasy-2018&quot;&gt;Will Toledo&lt;/a&gt; or &lt;a href=&quot;/mendokusai/2019/06/05/day9-daily-100&quot;&gt;Sean Plott,&lt;/a&gt; but in their nature as semi-public figures, I am acutely aware that I only see a small slice of their true in the course of whatever parasocial relationship we may have; I think it’s a lot easier to be inspired by and emulate someone who you know deeply.&lt;/p&gt;

&lt;p&gt;Recently I’ve felt the urgency to find a template for modern masculinity ramping up, as my younger brother is getting perilously close to legally being an adult. As much as I don’t want to be Geralt, I really, really don’t want &lt;em&gt;him&lt;/em&gt; to be Geralt, but I know that to steer him away from that path, I need to have a convincing alternative to offer in his black-clad, golden-eyed place. Which I guess is why I have to write about the rest of this stuff.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;I haven’t talked in anything other than euphemisms about my mental health on the blog for several months now, and I wish that I could say that was because I’ve had no issues with it, because that sadly is not the case. I’ve slipped back into &lt;a href=&quot;/mendokusai/2020/03/20/pretending&quot;&gt;pretending&lt;/a&gt; that everything is fine, when of course it is not. Part of it is my desire to fulfill that role of the male stereotype described above, to need no one else and not ask for help, for doing so would diminish my perpetually fragile gender identity. Part of it is to avoid crying wolf - if I ask for help too often and the people close to me make sacrifices for my benefit, what if there comes a time when their support is not so forthcoming, but I am in more dire need of it than before? In a similar vein, part of it is because I am desperate to avoid inflicting compassion fatigue on those around me - propping someone up emotionally is exhausting and clearly unhealthy for any extended length of time, and I am reticent to ask anyone to do so unless it is absolutely necessary.&lt;/p&gt;

&lt;p&gt;These things make it difficult to talk about depression though. When faced with the greeting of my generation, “hey, how’s it going?”, I often feel at a total loss for how to respond. I don’t want to sugarcoat things, or out-and-out lie, to pretend everything is fine and dandy, but equally I feel like I need to set some kind of threshold for how bad things have to get before I start immediately admitting that’s the case. My depression has been around a long time and clearly looks unlikely to be disappearing anytime soon, and that means that nine times out of ten when you ask me how I am, the true answer ranges from gently melancholic to in full-blown emotional turmoil and anguish. Were I to say that those nine times, I am terrified that eventually people would simply stop asking me how I am. I am even more terrified that my depression may become my whole personality or identity, and that I fail to have anything to offer to others other than negativity - I still want to make people smile, laugh, feel good about themselves and the world, even if I struggle with those things myself.&lt;/p&gt;

&lt;p&gt;Over time, I’ve learned to split my thoughts and feelings into two camps; those which are proportional to reality, and those which aren’t. Or, more accurately; those which seem congruent with how the majority of other people ostensibly experience reality, and those which seem incongruent - because all of them are congruent with how I experience it. The pretending is easy once the distinction becomes clear; you simply don’t acknowledge the things that you feel that you don’t think others would feel in the same situation. So that is what I do; I put everything else in a box, and I sweep the box under the proverbial rug, and sometimes I vaguely allude to the box - but I never talk about what’s in the box. I never take the box out and show it to anybody, let alone open it and show them what’s inside.&lt;/p&gt;

&lt;p&gt;Obviously that doesn’t make it disappear though, and not acknowledging those feelings does not prevent me from feeling them. Even knowing that they are not proportional to reality - that they are not ‘real’ - that I should be mindful and sit on a riverbank as I watch them drift out past - does not prevent me from feeling them either. Sometimes they occupy a fraction of my consciousness, but sometimes they consume it whole, and yet outwardly I do my best to maintain the same façade regardless of what is going on behind my eyes. That is where the real fear I have about my mental health lies - that one day I will truly disconnect from reality, and be consumed by those thoughts.&lt;/p&gt;

&lt;p&gt;I am unhealthily and unhelpfully ashamed about a lot of aspects of myself, this cornucopia of disproportion very much included. Fortunately, I think shame is one of the very few emotions that you can, to some degree, will out of existence, if you choose to own your flaws and accept them as an important part of your identity.&lt;/p&gt;

&lt;p&gt;I’ve written about it before and touched on it today, but I am exceptionally uncomfortable in my own skin - I don’t really like the way I look at all, and even hate many parts of my own appearance. I don’t talk about it, or downplay it when I do though, because I’m ashamed and worry that it’s unmanly.&lt;/p&gt;

&lt;p&gt;Not having an undergraduate degree constantly makes me feel inadequate - I’m not sure if I’ve ever even admitted that to anyone. I don’t feel as skilled as I think I should be, I am terrified my career won’t take the trajectory I want it to, the fact that I earn less than most of my friends also makes me feel like I am not good enough to be friends with them. Again, not something I ever talk about, shame, lack of machismo, necessity to act like I belong, etc.&lt;/p&gt;

&lt;p&gt;I struggle a lot with loneliness, both romantically and otherwise. The few romantic relationships I have had, while some had their fair share of tumult, brought me a sense of peace, security and joy that few other things in my life have. The vast majority of my close friends are also in relationships, and I am jealous to some greater or lesser degree every time they are mentioned. Even platonically, often I struggle to find the sense of connection that I am desperate for - likely because I invest so much energy in being afraid of what the other person thinks about me, or perhaps what they might think about me were I more open and truthful with them. In my mind though, men are not lonely; we need only our own company to be happy. So, I don’t talk about this either.&lt;/p&gt;

&lt;p&gt;All of these things might not be the appropriate response to my situation. Most people have it a lot worse than me in a lot of ways, and perhaps I ought to be more grateful for what I &lt;em&gt;do&lt;/em&gt; have - which is a lot. Perhaps all those things are overrated; I won’t love how I look if I was 10kg lighter, doubling my salary wouldn’t double my happiness, a girlfriend would only be an attempt to duct-tape over my low self-esteem rather than a more structurally sound solution. In a way though, I don’t know if that matters, and I don’t know if I care - because all that stuff is how I feel, every day, even if I try really, really hard not to - which I do. It’s all painful; sometimes the pain is more a gentle discomfort, a slight soreness, and sometimes it feels unbearable; like a slew of broken bones, my body and mind desperate for it all to stop.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;One of the pillars of being a New Man which I would like to erect is the concept of taking responsibility, and rather than merely complain, take action to remedy whatever problems I might have. I think this makes it easier to talk to people about these topics as well - having someone share their difficult feelings with you for the sake of catharsis and support rather than because they’re turning to you for a definitive solution is far more manageable and sustainable. So… what next?&lt;/p&gt;

&lt;p&gt;I have a lot of learned behaviours that I need to unlearn, which has thus far proven difficult, but I am reliably informed that consistency is key, so I will keep trying. I’m not so naïve to think that I could give up all pretence in one fell swoop, but I can certainly chip away at it, and learn how to talk about the box under the rug, even if I need to learn a new vocabulary with which to do so. I can keep looking for male role models, and hopefully if I search hard and long enough, I will find some, and try to cast myself in their image - and if not, perhaps I will just have to make up my own version of modern masculinity and try to be at peace with that.&lt;/p&gt;

&lt;p&gt;Given the present situation, this seems like the perfect time to try and work on myself, so here goes. And as always; wish me luck.&lt;/p&gt;
</description>
        <pubDate>Sun, 29 Mar 2020 00:00:00 +0000</pubDate>
        <link>http://localhost:4000//tartarus/2020/03/29/pretending-ii</link>
        <guid isPermaLink="true">http://localhost:4000//tartarus/2020/03/29/pretending-ii</guid>
      </item>
    
      <item>
        <title>The recipe for success II</title>
        <description>&lt;p&gt;&lt;a href=&quot;/mendokusai/2017/10/27/the-recipe-for-success&quot;&gt;A long time ago&lt;/a&gt; I gave my three ingredients for success as
self-awareness, patience and work ethic. I would like to think that I have improved on all three fronts in
the two and a half years since writing that, but now I think there is fairly clearly some components of the
formula which I omitted; namely self-respect, knowledge of the market, networking &amp;amp; communication soft skills,
and of course, a huge amount of luck.&lt;/p&gt;

&lt;p&gt;Admittedly the success I was desirous of at the time was that found in poker, so I’ll forgive a little of my
naïveté, but now I am in software and so naturally the definition of success has changed (although I think
that all the other skills are equally as applicable to poker, they’re just less obviously so). I think my
knowledge of the market is passable, and my luck seems to be boundless, however the others all have a long
way to go.&lt;/p&gt;
</description>
        <pubDate>Sat, 28 Mar 2020 00:00:00 +0000</pubDate>
        <link>http://localhost:4000//mendokusai/2020/03/28/the-recipe-for-success-ii</link>
        <guid isPermaLink="true">http://localhost:4000//mendokusai/2020/03/28/the-recipe-for-success-ii</guid>
      </item>
    
      <item>
        <title>Lockdown II</title>
        <description>&lt;p&gt;It’s been a week of working from home and leaving my flat solely to exercise, bar one trip to the supermarket on Monday
which was intended to last two weeks. I was frankly expecting to be incredibly depressed by this point, and there is
certainly still plenty of time for that to happen, but at least so far I’m actually… not?&lt;/p&gt;

&lt;p&gt;Some mixture of the improved weather, newfound extra time allowing for new acts of self-care in my routine, and extra
effort being made by a lot of my friends to keep in touch is keeping my afloat. Naturally I hope the pandemic can be
stemmed as soon as possible, but after this week, I’m glad that I feel somewhat more prepared to deal with the eventuality
that it continues for longer than we’d all like.&lt;/p&gt;
</description>
        <pubDate>Fri, 27 Mar 2020 00:00:00 +0000</pubDate>
        <link>http://localhost:4000//mendokusai/2020/03/27/lockdown-ii</link>
        <guid isPermaLink="true">http://localhost:4000//mendokusai/2020/03/27/lockdown-ii</guid>
      </item>
    
  </channel>
</rss>